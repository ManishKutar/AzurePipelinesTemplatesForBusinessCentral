# IMPORTANT!
#
#  Build Service user needs to have Contribute to Pull Requests permission for this task to work. It can be added in repository settings.

# NOTE: It creates pull request even when there are no changes to pull - such PR can be closed.
# TODO: Auto-completion of pull request (e.g. when reviewers approved and build passes)

parameters:
  taskName: CreatePullRequest
  sourceRefName: ''
  targetRefName: ''
  title: ''
  description: ''
  autoComplete: false
  mergeCommitMessage: ''
  mergeStrategy: noFastForward
  deleteSourceBranch: false
  condition: succeededOrFailed()

steps:
- powershell: |
    $url = "${env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${env:SYSTEM_TEAMPROJECTID}/_apis/git/repositories/${env:BUILD_REPOSITORY_ID}/pullrequests?api-version=5.1"
    Write-Host -Object "URL: $url"

    $body = [pscustomobject]@{
      sourceRefName = $env:PR_SOURCE_REF_NAME
      targetRefName = $env:PR_TARGET_REF_NAME
      title = $env:PR_TITLE
      description = $env:PR_DESCRIPTION
      reviewers = @()
    }
    
    if ([bool]::Parse($env:PR_AUTOCOMPLETE)) {
      $body | Add-Member -MemberType NoteProperty -Name autoCompleteSetBy  -Value $env:BUILD_QUEUEDBYID
      
      $completionOptions = [pscustomobject]@{
        mergeStrategy = $env:PR_MERGE_STRATEGY
        deleteSourceBranch = [bool]::Parse($env:PR_DELETE_SOURCE_BRANCH)
      }
      if ($env:PR_MERGE_COMMIT_MESSAGE -ne '') {
        $completionOptions | Add-Member -MemberType NoteProperty -Name mergeCommitMessage -Value $env:PR_MERGE_COMMIT_MESSAGE
      }
      $body | Add-Member -MemberType NoteProperty -Name completionOptions -Value $completionOptions
    }
    
    $bodyJson = $body | ConvertTo-Json

    Write-Host -Object "Body: $bodyJson"

    try {
      $pr = Invoke-RestMethod -Method POST -Uri $url -ContentType 'application/json' -Body $bodyJson -Headers @{
        Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN"
      }
      Write-Host "PullRequest = $($pr | ConvertTo-Json -Depth 100)"
    } catch {
      $ServerErrorMessage = $_.ErrorDetails.Message | ConvertFrom-Json 
      switch ($ServerErrorMessage.message) {
        'TF401179: An active pull request for the source and target branch already exists.' {
          Write-Warning -Message 'PR already exists.'
          Write-Host -Object '##vso[task.logissue type=warning]PR already exists.'
        }
        default {
          throw
        }
      }
    }
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    PR_SOURCE_REF_NAME: ${{ parameters.sourceRefName }}
    PR_TARGET_REF_NAME: ${{ parameters.targetRefName }}
    PR_TITLE: ${{ parameters.title }}
    PR_DESCRIPTION: ${{ parameters.description }}
    PR_AUTOCOMPLETE: ${{ parameters.autoComplete }}
    PR_MERGE_COMMIT_MESSAGE: ${{ parameters.mergeCommitMessage }}
    PR_MERGE_STRATEGY: ${{ parameters.mergeStrategy }}
    PR_DELETE_SOURCE_BRANCH: ${{ parameters.deleteSourceBranch }}
  condition: ${{ parameters.condition }}
  displayName: Creating PR from ${{ parameters.sourceRefName }} to ${{ parameters.targetRefName }}
